{"version":3,"file":"nmmes-backend.js","sources":["webpack/universalModuleDefinition","webpack/bootstrap 33f70a1d0751b16bf29f","src/index.js","external \"chalk\"","src/logger.js","src/module.js","src/video.js","external \"bluebird\"","external \"filesize\"","external \"fluent-ffmpeg\"","external \"fs\"","external \"lodash\"","external \"moment\"","external \"moment-duration-format\"","external \"path\"","external \"tracer\""],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chalk\"), require(\"bluebird\"), require(\"filesize\"), require(\"fluent-ffmpeg\"), require(\"fs\"), require(\"lodash\"), require(\"moment\"), require(\"moment-duration-format\"), require(\"path\"), require(\"tracer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"chalk\", \"bluebird\", \"filesize\", \"fluent-ffmpeg\", \"fs\", \"lodash\", \"moment\", \"moment-duration-format\", \"path\", \"tracer\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nmmes-backend\"] = factory(require(\"chalk\"), require(\"bluebird\"), require(\"filesize\"), require(\"fluent-ffmpeg\"), require(\"fs\"), require(\"lodash\"), require(\"moment\"), require(\"moment-duration-format\"), require(\"path\"), require(\"tracer\"));\n\telse\n\t\troot[\"nmmes-backend\"] = factory(root[\"chalk\"], root[\"bluebird\"], root[\"filesize\"], root[\"fluent-ffmpeg\"], root[\"fs\"], root[\"lodash\"], root[\"moment\"], root[\"moment-duration-format\"], root[\"path\"], root[\"tracer\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33f70a1d0751b16bf29f","import Logger from './logger.js';\n\nprocess.on(\"unhandledRejection\", function(reason) {\n    Logger.error('UNHANDLED ERROR:', reason);\n});\n\nexport {default as Logger} from './logger';\nexport {default as Module} from './module';\nexport {default as Video} from './video';\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 1\n// module chunks = 0","import chalk from 'chalk';\nimport tracer from 'tracer';\n\nconst moduleRegex = /node_modules\\/(.*?(?=\\/))/;\n\nconst options = {\n    format: \"{{timestamp}} ({{method}}) [{{file}}:{{line}}] <{{title}}> {{message}}\",\n    dateformat: \"HH:MM:ss.L\",\n    filters: [{\n        trace: chalk.magenta,\n        debug: chalk.blue,\n        info: chalk.green,\n        warn: chalk.yellow,\n        error: chalk.red\n    }],\n    preprocess: function(data) {\n        data.title = data.title.toUpperCase();\n        const matches = data.path.match(moduleRegex);\n        data.file = matches && matches[1] ? `${matches[1]}>${data.file}` : data.file;\n    },\n    transport: data => {\n        process.stdout.write(data.output + \"\\n\");\n    }\n};\n\nlet logger = tracer.colorConsole(options);\nlogger.setLevel = (level) => {\n    tracer.setLevel(level);\n};\nexport default logger;\n\n\n\n// WEBPACK FOOTER //\n// src/logger.js","'use strict';\n\nimport {\n    Logger\n} from './';\n\nimport chalk from 'chalk';\n\nexport default class Module {\n    tolerance = 'required';\n    constructor(info, options = {}) {\n        this.displayName = this.constructor.name;\n        if (typeof info === 'undefined') {\n            throw new Error(`Module ${this.displayName} must provide an info object.`);\n        }\n\n        if (info.nmmes.moduleVersion < 1) {\n            Logger.warn(`Module ${this.displayName}\\'s version [${info.nmmes.moduleVersion}] is lower than the required version [1].`);\n        }\n\n        this.info = info;\n        Object.assign(this, {\n            options\n        });\n\n        Logger.trace(`Module ${chalk.bold(this.displayName)} has been created with options:`, options);\n    }\n\n    attach(video) {\n        if (this.video)\n            throw new Error('Video already attacked');\n\n        this.video = video;\n    }\n\n    async run() {\n        if (typeof this.executable !== 'function')\n            throw new TypeError(`Module ${this.displayName} must provide an executable class function.`);\n\n        let results = await this.executable(Object.assign({}, this.video.output.map));\n\n        if (typeof results === 'undefined')\n            Logger.warn(`Module ${this.displayName} returned an undefined result.`)\n        else if (typeof results !== 'object')\n            throw new TypeError(`Module ${this.displayName} returned a non object result.`);\n\n        Logger.trace(`Module ${chalk.bold(this.displayName)} has finished. Results:\\n`, JSON.stringify(results));\n\n        return results;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/module.js","'use strict';\n\nimport {\n    Logger\n} from './';\n\nimport chalk from 'chalk';\nimport moment from 'moment';\nrequire(\"moment-duration-format\");\nimport fileSize from 'filesize';\nimport Path from 'path';\nimport Bluebird from 'bluebird';\nimport {\n    merge\n} from 'lodash';\n\nconst fs = Bluebird.promisifyAll(require(\"fs\"));\nconst ffmpeg = Bluebird.promisifyAll(require(\"fluent-ffmpeg\"));\n\nexport default class Video {\n    constructor(options) {\n        Logger.debug(`Creating ${chalk.bold(Path.basename(options.input.path))}.`);\n\n        if (!options.input.path)\n            throw new Error('options.input.path must be provided.');\n        if (!options.output.path)\n            throw new Error('options.output.path must be provided.');\n\n        merge(this, {\n            strict: true,\n            modules: [],\n            input: { ...Path.parse(options.input.path),\n                map: {\n                    streams: {},\n                    format: {}\n                }\n            },\n            output: { ...Path.parse(options.output.path),\n                map: {\n                    streams: {},\n                    format: {}\n                }\n            }\n        }, options);\n\n        for (let module of this.modules) {\n            module.attach(this);\n        }\n\n        Logger.trace('Video created:\\n', this);\n    }\n\n    async initialize() {\n        Logger.trace('Generating metadata for input...');\n\n        let metadata = await ffmpeg.ffprobeAsync(this.input.path);\n\n        // Lets do some metadata manipulation, I want the streams array as an\n        // object\n        metadata.streams = metadata.streams.reduce((obj, stream) => {\n            stream.input = 0;\n            obj[stream.index] = stream;\n            return obj;\n        }, {});\n\n        this.input.metadata = {\n            0: metadata\n        };\n\n        const streams = Object.values(metadata.streams);\n        for (let pos in streams) {\n            const stream = streams[pos];\n\n            this.output.map.streams[stream.index] = {\n                map: `${stream.input}:${stream.index}`,\n                ['metadata:s:' + pos]: [],\n                ['disposition:' + pos]: [],\n                vf: [],\n                af: []\n            };\n        }\n        this.initialized = true;\n\n        return this;\n    }\n\n    async run() {\n        this.running = true;\n        this.started = true;\n        Logger.info(`Started processing ${chalk.bold(this.input.base)} -> ${chalk.bold(this.output.base)}.`);\n        this.startTime = new Date();\n\n        const moduleInitPromises = this.modules.reduce((array, module) => {\n            if (!module.init)\n                return array;\n\n            array.push(module.init());\n            return array;\n        }, []);\n\n        await Promise.all(moduleInitPromises);\n        if (!this.initialized)\n            await this.initialize();\n\n        try {\n            for (const idx in this.modules) {\n                const module = this.modules[idx];\n                Logger.trace(`Running module ${chalk.bold(module.displayName)} [${chalk.bold(idx)}].`);\n\n                let results = await module.run(Object.assign({}, this.output.map));\n                merge(this.output.map, results);\n            }\n        } catch (e) {\n            this.stop(e);\n        }\n\n        return;\n    }\n\n    stop(err) {\n        this.running = false;\n        this.stopTime = new Date();\n\n        if (err) {\n            Logger.error(`Video stopped processing with error: ${err.message}`);\n            Logger.debug(err);\n            this.error = err;\n            return;\n        }\n        let duration = moment.duration(moment(this.stopTime).diff(this.startTime), 'milliseconds').format('h:mm:ss.SSS', {\n            trim: false\n        });\n        Logger.debug(`File output to ${chalk.bold(this.output.path)}.`);\n\n        let stats = Promise.all([fs.statAsync(this.input.path), fs.statAsync(this.output.path)]);\n\n        let outputSize = fileSize(stats[1].size);\n        let reductionPercent = (stats[1].size / stats[0].size * 100).toFixed(2);\n        Logger.info(`Finished processing ${chalk.bold(this[0].base)} [${chalk.yellow(duration)}] [${chalk.yellow(outputSize)}] [${chalk.yellow(reductionPercent+'%')}].`);\n    }\n\n    duration = {\n        get input() {\n            return !isNaN(this.input.metadata[0].format.duration) ?\n                new Promise(resolve => resolve(this.input.metadata[0].format.duration)) :\n                Video.calcDuration(this.input.path)\n        },\n        get output() {\n            return !isNaN(this.output.metadata[0].format.duration) ?\n                new Promise(resolve => resolve(this.output.metadata[0].format.duration)) :\n                Video.calcDuration(this.output.path)\n        },\n    };\n\n    static calcDuration(input) {\n        return new Promise((resolve, reject) => {\n            ffmpeg(input)\n                .outputFormat('null')\n                .output('-')\n                .on('start', function(commandLine) {\n                    Logger.trace('[FFMPEG] Query:', commandLine);\n                })\n                .on('error', function(err) {\n                    reject(err);\n                })\n                .on('end', function(stdout, stderr) {\n                    let lines = stderr.split('\\n');\n                    let lastTime = lines[lines.length - 3];\n                    let duration = lastTime.match(new RegExp('time=(([0-9]|\\:|\\.)+) bitrate'))[1];\n                    let seconds = moment.duration(duration).format(\"s\", 6);\n                    Logger.trace(`Duration manually calculated to ${seconds} second(s).`);\n                    resolve(seconds);\n                }).run();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/video.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"filesize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"filesize\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"fluent-ffmpeg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fluent-ffmpeg\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"moment-duration-format\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment-duration-format\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"tracer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tracer\"\n// module id = 13\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAbA;AAcA;AAzCA;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AA0HA;AACA;AAGA;AACA;AACA;AAGA;AAVA;AACA;AAzHA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAFA;AADA;AATA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AA/BA;AAgCA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3JA;;;;;;;;ACnBA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;;;;;;A","sourceRoot":""}