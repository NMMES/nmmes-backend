{"version":3,"file":"nmmes-backend.js","sources":["webpack/universalModuleDefinition","webpack/bootstrap f787ae83faefe9f10919","src/logger.js","external \"bluebird\"","external \"chalk\"","external \"events\"","src/index.js","src/module.js","src/video.js","external \"filesize\"","external \"fluent-ffmpeg\"","external \"fs\"","external \"lodash\"","external \"lodash/cloneDeep\"","external \"lodash/merge\"","external \"moment\"","external \"moment-duration-format\"","external \"npm-query\"","external \"path\"","external \"query-string\"","external \"semver\"","external \"tracer\""],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bluebird\"), require(\"chalk\"), require(\"events\"), require(\"filesize\"), require(\"fluent-ffmpeg\"), require(\"fs\"), require(\"lodash\"), require(\"lodash/cloneDeep\"), require(\"lodash/merge\"), require(\"moment\"), require(\"moment-duration-format\"), require(\"npm-query\"), require(\"path\"), require(\"query-string\"), require(\"semver\"), require(\"tracer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"bluebird\", \"chalk\", \"events\", \"filesize\", \"fluent-ffmpeg\", \"fs\", \"lodash\", \"lodash/cloneDeep\", \"lodash/merge\", \"moment\", \"moment-duration-format\", \"npm-query\", \"path\", \"query-string\", \"semver\", \"tracer\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nmmes-backend\"] = factory(require(\"bluebird\"), require(\"chalk\"), require(\"events\"), require(\"filesize\"), require(\"fluent-ffmpeg\"), require(\"fs\"), require(\"lodash\"), require(\"lodash/cloneDeep\"), require(\"lodash/merge\"), require(\"moment\"), require(\"moment-duration-format\"), require(\"npm-query\"), require(\"path\"), require(\"query-string\"), require(\"semver\"), require(\"tracer\"));\n\telse\n\t\troot[\"nmmes-backend\"] = factory(root[\"bluebird\"], root[\"chalk\"], root[\"events\"], root[\"filesize\"], root[\"fluent-ffmpeg\"], root[\"fs\"], root[\"lodash\"], root[\"lodash/cloneDeep\"], root[\"lodash/merge\"], root[\"moment\"], root[\"moment-duration-format\"], root[\"npm-query\"], root[\"path\"], root[\"query-string\"], root[\"semver\"], root[\"tracer\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f787ae83faefe9f10919","import chalk from 'chalk';\nimport tracer from 'tracer';\n\nconst options = {\n    format: [\n        \"[{{title}}] {{message}}\",\n        {\n            trace: \"[{{title}}] {{message}}\\n\\t({{method}} in {{path}}:{{line}})\",\n            debug: \"[{{title}}] {{message}} ({{method}})\",\n        }\n    ],\n    filters: [{\n        trace: chalk.magenta,\n        debug: chalk.blue,\n        info: chalk.green,\n        warn: chalk.yellow,\n        error: chalk.red\n    }],\n    dateformat: \"HH:MM:ss.L\",\n    preprocess: function(data) {\n        data.title = data.title.toUpperCase();\n    },\n    transport: function(data) {\n        if (logger.stream) {\n            logger.stream.write(data.output + \"\\n\");\n        } else {\n            console.log(data.output);\n        }\n    }\n}\n\nlet logger = tracer.colorConsole(options);\nlogger.setLevel = (level) => {\n    tracer.setLevel(level);\n};\nexport default logger;\n\n\n\n// WEBPACK FOOTER //\n// src/logger.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"events\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"events\"\n// module id = 3\n// module chunks = 0","import Promise from 'bluebird';\nimport Logger from './logger.js';\nPromise.config({\n    // Enable warnings\n    warnings: true,\n    // Enable long stack traces\n    longStackTraces: true,\n    // Enable cancellation\n    cancellation: true,\n    // Enable monitoring\n    monitoring: false\n});\n\nprocess.on(\"unhandledRejection\", function(reason) {\n    Logger.error('UNHANDLED ERROR:', reason);\n});\n\nimport Module from './module.js';\nimport Video from './video.js';\nexport {Module, Video, Logger};\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","'use strict';\n\nimport Logger from './logger.js';\nimport chalk from 'chalk';\nimport Promise from 'bluebird';\nimport queryString from 'query-string';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport semver from 'semver';\nimport {\n    NpmClient\n} from 'npm-query';\nimport {\n    EventEmitter\n} from 'events';\n\nexport default class Module extends EventEmitter {\n    tolerance = 'required'\n    constructor(info, options = {}) {\n        super();\n        this.displayName = this.constructor.name;\n        if (typeof info === 'undefined') {\n            throw new Error(`Module ${this.displayName} must provide an info object.`);\n        }\n        this.info = info;\n        Object.assign(this, {\n            options\n        });\n\n        Logger.trace(`Module ${chalk.bold(this.displayName)} has been created with options:`, options);\n    }\n    run(video, force = false, cache = true) {\n        let _self = this;\n        if (this.pending) {\n            return this.pending;\n        }\n        if (video.moduleCache[createModuleQuery(this)] && video.moduleCache[createModuleQuery(this)].cache && !force) {\n            return new Promise((resolve) => {\n                Logger.debug(`Module cache hit: ${chalk.bold(_self.displayName)}'s results have been found in cache. Returning cached results.`);\n                resolve(video.moduleCache[createModuleQuery(this)].cache);\n            });\n        }\n\n        video.moduleCache[createModuleQuery(this)] = this;\n\n        return this.execute(video, cache);\n    }\n    execute(video, cache) {\n        let _self = this;\n        return this.pending = new Promise((resolve, reject) => {\n\n            // Make params immutable\n            const Imap = video.strict && !_self.options.noStrict ? deepFreeze(cloneDeep(video.output.map)) : video.output.map;\n\n            Logger.info(`Module ${chalk.bold(_self.displayName)} has started.`);\n\n            video.emit('module-start', _self);\n            _self.emit('start');\n\n            let runModule = _self.executable(video, Imap);\n\n            runModule.then((result = {}) => {\n                video.emit('module-stop', _self);\n                _self.emit('stop');\n                Logger.trace(`Module ${chalk.bold(_self.displayName)} has finished. Results:\\n`, JSON.stringify(result));\n\n                video.output.map = merge(video.output.map, result);\n\n                if (cache)\n                    _self.cache = result;\n                delete _self.pending;\n                resolve(result);\n            }, (err) => {\n                video.emit('module-stop', _self, err);\n                _self.emit('stop', err);\n                _self.error = err;\n                if (_self.tolerance === 'required') {\n                    Logger.error(`Required module ${chalk.bold(_self.displayName)} failed: ${err.message}`);\n                    Logger.debug(`Module ${chalk.bold(_self.displayName)} error:`, err);\n                    return reject(err);\n                } else if (_self.tolerance === 'optional') {\n                    Logger.warn(`Optional module ${chalk.bold(_self.displayName)} failed: ${err.message}`);\n                    Logger.debug(`Module ${chalk.bold(_self.displayName)} error:`, err);\n                    return resolve();\n                } else {\n                    Logger.error(`Module ${chalk.bold(_self.displayName)} failed: ${err.message}`);\n                    Logger.debug(`Module ${chalk.bold(_self.displayName)} error:`, err);\n                    return reject(err);\n                }\n            });\n            let stopHandler = (err) => {\n                _self.emit('stop', err);\n                runModule.cancel();\n            };\n            video.once('stop', stopHandler);\n            _self.once('stop', () => {\n                video.removeListener('stop', stopHandler);\n            });\n        });\n    }\n}\n\nexport function createModuleQuery(module, name) {\n    return name || module.displayName + '?' + queryString.stringify(module.args);\n}\n\nfunction deepFreeze(obj, depth = 0) {\n\n    // Retrieve the property names defined on obj\n    var propNames = Object.getOwnPropertyNames(obj);\n\n    // Freeze properties before freezing self\n    propNames.forEach(function(name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && prop !== null && depth < 6)\n            deepFreeze(prop, ++depth);\n    });\n\n    // Freeze self (no-op if already frozen)\n    return Object.freeze(obj);\n}\n\nexport function checkForUpdates(modules) {\n    let client = new NpmClient();\n\n    // Convert module array to object\n    let moduleMap = modules.reduce((obj, module) => {\n        obj[module.info.name] = module;\n        return obj;\n    }, {});\n\n    let queries = modules.reduce((obj, module) => {\n        obj[module.info.name] = Promise.resolve(client.getModule(module.info.name)).reflect();\n        return obj;\n    }, {});\n\n    Promise.props(queries).then((results) => {\n        for (let [name, data] of Object.entries(results)) {\n            if (data.isFulfilled()) {\n                data = data.value();\n                const latest = data['dist-tags'].latest;\n                const current = moduleMap[name].info.version;\n                if (semver.gt(latest, current)) {\n                    Logger.warn(`Newer version of ${name}@${latest} available (current: ${current})`);\n                }\n            } else {\n                data = data.reason();\n                Logger.trace(`Could not check for a new version of ${chalk.bold(name)}. Error:`, data.message);\n            }\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// src/module.js","'use strict';\n\nimport chalk from 'chalk';\nimport EventEmitter from 'events';\nimport ffmpeg from 'fluent-ffmpeg';\nimport moment from 'moment';\nrequire(\"moment-duration-format\");\nimport Promise from 'bluebird';\nimport fs from 'fs';\nimport fileSize from 'filesize';\nimport {\n    merge\n} from 'lodash';\nimport Path from 'path';\n\nconst stat = Promise.promisify(fs.stat);\n\nimport Logger from './logger.js';\n\nexport default class Video extends EventEmitter {\n    curretModuleIndex = 0;\n    moduleCache = {};\n    running = false;\n    started = false;\n    constructor(options) {\n        Logger.debug(`Creating ${chalk.bold(Path.basename(options.input.path))}.`);\n\n        if (!options.input.path)\n            throw new Error('options.input.path must be provided.');\n        if (!options.output.path)\n            throw new Error('options.output.path must be provided.');\n\n        super();\n\n        merge(this, {\n            strict: true,\n            modules: [],\n            input: { ...Path.parse(options.input.path),\n                map: {\n                    streams: {},\n                    format: {}\n                }\n            },\n            output: { ...Path.parse(options.output.path),\n                map: {\n                    streams: {},\n                    format: {}\n                }\n            }\n        }, options);\n\n        // checkForUpdates(this.modules);\n\n        Logger.trace('Video created:\\n', this);\n    }\n    initialize() {\n        let _self = this;\n        return new Promise((resolve, reject) => {\n            Logger.trace('Generating metadata for input...');\n            ffmpeg.ffprobe(_self.input.path, function(err, metadata) {\n                if (err)\n                    return reject(err);\n\n                // Lets do some metadata manipulation, I want the streams array as an\n                // object\n                metadata.streams = metadata.streams.reduce((obj, stream) => {\n                    stream.input = 0;\n                    obj[stream.index] = stream;\n                    return obj;\n                }, {});\n\n                _self.input.metadata = {\n                    0: metadata\n                };\n\n                const streams = Object.values(metadata.streams);\n                for (let pos in streams) {\n                    const stream = streams[pos];\n\n                    _self.output.map.streams[stream.index] = {\n                        map: `${stream.input}:${stream.index}`,\n                        ['metadata:s:' + pos]: [],\n                        ['disposition:' + pos]: [],\n                        vf: [],\n                        af: []\n                    };\n                }\n\n                if (isNaN(metadata.format.duration)) {\n                    Logger.trace('Invalid duration:', chalk.bold(metadata.format.duration));\n                    Logger.debug(`Duration invalid, attempting to calculate manually...`);\n                    Video.calcDuration(_self.input.path).then((duration) => {\n                        Logger.debug(`Duration calculated to ${duration} second(s).`);\n                        metadata.format.duration = duration;\n                        resolve();\n                    }, reject);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    start() {\n        let _self = this;\n        this.running = true;\n        this.started = true;\n        this.emit('start');\n        Logger.info(`Started processing ${chalk.bold(this.input.base)} -> ${chalk.bold(this.output.base)}.`);\n        this.startTime = new Date();\n\n        return new Promise((resolve, reject) => {\n            // Run module init\n            Promise\n                .all(this.modules.reduce((array, module) => {\n                    if (!module.init)\n                        return array;\n                    array.push(new Promise((resolve, reject) => {\n                        module.init(_self).then(resolve, (err) => {\n                            Logger.error(`Module ${chalk.bold(module.displayName)} initialization failed: ${err.message}`);\n                            Logger.debug('Error:', err);\n                            reject(new Error('Module initialization failed.'));\n                        });\n                    }));\n                    return array;\n                }, []))\n                .then(this.initialize.bind(this))\n                .then(resolve)\n                .return(0)\n                .then(this.runModule.bind(this), (err) => {\n                    this._stop(err);\n                    reject(err);\n                });\n        });\n    }\n\n    runModule(number = this.curretModuleIndex) {\n        if (!this.modules[number]) {\n            this._stop();\n            return;\n        }\n        if (this.stopTime)\n            return;\n        const moduleName = this.modules[number].displayName;\n        Logger.trace(`Running module ${chalk.bold(moduleName)} [${chalk.bold(number)}].`);\n        this.modules[number].run(this).then(() => {\n            this.runModule(++number);\n        }, (err) => {\n            if (this.modules[number].tolerance === 'required') {\n                Logger.debug('Error:', err);\n                return this._stop(new Error('Module execution failed.'));\n            }\n\n            this.runModule(++this.curretModuleIndex);\n        });\n    }\n\n    _stop(err) {\n        let _self = this;\n        this.running = false;\n        if (this.stopTime) {\n            Logger.warn('Attempted to stop a video which has already stopped.')\n            return;\n        }\n        this.stopTime = new Date();\n        this.emit('stop', err);\n        if (err) {\n            Logger.error(`Video stopped processing with error: ${err.message}`);\n            Logger.debug(err);\n            this.emit('stopped', err);\n            this.error = err;\n            return;\n        }\n        let duration = moment.duration(moment(this.stopTime).diff(this.startTime), 'milliseconds').format('h:mm:ss.SSS', {\n            trim: false\n        });\n        Logger.debug(`File output to ${chalk.bold(this.output.path)}.`);\n        Promise.props({\n            input: stat(_self.input.path),\n            output: stat(_self.output.path),\n        }).then((stats) => {\n            let outputSize = fileSize(stats.output.size);\n            let reductionPercent = (stats.output.size / stats.input.size * 100).toFixed(2);\n            Logger.info(`Finished processing ${chalk.bold(this.input.base)} [${chalk.yellow(duration)}] [${chalk.yellow(outputSize)}] [${chalk.yellow(reductionPercent+'%')}].`);\n        }).catch(err => {\n            Logger.error(err.message);\n        }).reflect().then(() => {\n            this.emit('stopped');\n        });\n\n    }\n    stop = this._stop;\n\n    static getDuration(input, type = 'input') {\n        return new Promise(function(resolve, reject) {\n            if (typeof input === 'string') {\n                return Video.calcDuration(input).then(resolve, reject);\n            }\n            if (input instanceof Video) {\n                if (type === 'input') {\n                    if (input.input.metadata[0].format.duration && !isNaN(input.input.metadata[0].format.duration))\n                        return resolve(input.input.metadata[0].format.duration);\n\n                    return Video.calcDuration(input.input.metadata[0].format.duration).then(resolve, reject);\n                }\n                if (type === 'output') {\n                    if (input.output.metadata[0].format.duration && !isNaN(input.output.metadata[0].format.duration))\n                        return resolve(input.output.metadata[0].format.duration);\n\n                    return Video.calcDuration(input.output.metadata[0].format.duration).then(resolve, reject);\n                }\n            }\n\n            reject(new Error('Unknown input type.'));\n        });\n    }\n\n    static calcDuration(input) {\n        return new Promise((resolve, reject) => {\n            ffmpeg(input)\n                .outputFormat('null')\n                .output('-')\n                .on('start', function(commandLine) {\n                    Logger.trace('[FFMPEG] Query:', commandLine);\n                })\n                .on('error', function(err) {\n                    reject(err);\n                })\n                .on('end', function(stdout, stderr) {\n                    let lines = stderr.split('\\n');\n                    let lastTime = lines[lines.length - 3];\n                    let duration = lastTime.match(new RegExp('time=(([0-9]|\\:|\\.)+) bitrate'))[1];\n                    let seconds = moment.duration(duration).format(\"s\", 6);\n                    Logger.trace(`Duration manually calculated to ${seconds} second(s).`);\n                    resolve(seconds);\n                }).run();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/video.js","module.exports = require(\"filesize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"filesize\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"fluent-ffmpeg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fluent-ffmpeg\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"lodash/cloneDeep\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/cloneDeep\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"lodash/merge\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/merge\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"moment-duration-format\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment-duration-format\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"npm-query\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"npm-query\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"query-string\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"query-string\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"semver\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"semver\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"tracer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tracer\"\n// module id = 19\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AACA;AA2BA;AACA;AACA;AACA;AACA;;;;;;ACnCA;;;;;;ACCA;;;;;;ACCA;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClnFA;AAAA;AAAA;AACA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAFA;AADA;AATA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1NA;;;;;;;;ACnBA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;ACCA;;;;;;;;;;;A","sourceRoot":""}